(()=>{"use strict";var r={28:(r,n,e)=>{e.d(n,{Z:()=>A});var t=e(537),a=e.n(t),i=e(645),o=e.n(i)()(a());o.push([r.id,'/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  background-color: inherit;\r\n  border: 0;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-size: 1.75rem;\r\n  user-select: none;\r\n  font-weight: 200;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: 5rem 10fr;\r\n  grid-template-columns: 1fr 4fr;\r\n  grid-template-areas:\r\n    "header header"\r\n    "sidebar main";\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background-color: #3d81a3;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1.2rem;\r\n}\r\n\r\n.headerText {\r\n  font-size: 2rem;\r\n}\r\n\r\nheader > .material-symbols-outlined {\r\n  font-size: 2.4rem;\r\n  margin-top: 0.2rem;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.sidebar {\r\n  grid-area: sidebar;\r\n  background-color: #33617f;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: max-content;\r\n  padding-bottom: 2rem;\r\n}\r\n\r\n.sidebarHeader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  height: 2.5rem;\r\n  margin: 1rem;\r\n  margin-left: 1.3rem;\r\n}\r\n\r\n.sidebarHeader > .material-symbols-outlined {\r\n  padding-right: 0.25rem;\r\n}\r\n\r\n.sidebarTitle {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#tasks {\r\n  margin: 0 1rem 1rem 1rem;\r\n}\r\n\r\n.task {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.task:hover {\r\n  background-color: #35566b;\r\n  transition: 0.4s;\r\n}\r\n\r\n.task_active {\r\n  background-color: #35566b;\r\n}\r\n\r\n#addTaskInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin: 0rem 1rem 0 0.5rem;\r\n}\r\n\r\n::placeholder {\r\n  color: rgb(167, 167, 167);\r\n}\r\n\r\n.modifyingTasks {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.modifyingTasks > .material-symbols-outlined {\r\n  cursor: pointer;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\nmain {\r\n  grid-area: main;\r\n  background-color: #376e90;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.taskCard {\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background-color: #598cab;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.activityTitle {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  height: 2.5rem;\r\n  padding-left: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modifyingActivity {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n}\r\n\r\n.modifyingActivity > .material-symbols-outlined {\r\n  cursor: pointer;\r\n}\r\n\r\n#addActivityInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n}\r\n\r\n#activities {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.activity {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.activity:hover {\r\n  background-color: #5a8098;\r\n  transition: 0.4s;\r\n}\r\n\r\n.activity_active {\r\n  background-color: #5a8098;\r\n}\r\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,kBAAkB;AAClB;;GAEG;;AAEH,iBAAiB;AACjB;EACE,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,4DAA4D;EAC5D,eAAe;EACf,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,6BAA6B;EAC7B,8BAA8B;EAC9B;;kBAEgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,sBAAsB;EACtB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,qBAAqB;EACrB,cAAc;EACd,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,cAAc;EACd,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;EACrB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,cAAc;EACd,cAAc;EACd,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,YAAY;EACZ,2CAA2C;EAC3C,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,aAAa;EACb,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,OAAO;EACP,sBAAsB;EACtB,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,cAAc;EACd,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,cAAc;EACd,cAAc;EACd,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,YAAY;EACZ,2CAA2C;EAC3C,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;EACrB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:['/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  background-color: inherit;\r\n  border: 0;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-size: 1.75rem;\r\n  user-select: none;\r\n  font-weight: 200;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: 5rem 10fr;\r\n  grid-template-columns: 1fr 4fr;\r\n  grid-template-areas:\r\n    "header header"\r\n    "sidebar main";\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background-color: #3d81a3;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1.2rem;\r\n}\r\n\r\n.headerText {\r\n  font-size: 2rem;\r\n}\r\n\r\nheader > .material-symbols-outlined {\r\n  font-size: 2.4rem;\r\n  margin-top: 0.2rem;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.sidebar {\r\n  grid-area: sidebar;\r\n  background-color: #33617f;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: max-content;\r\n  padding-bottom: 2rem;\r\n}\r\n\r\n.sidebarHeader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  height: 2.5rem;\r\n  margin: 1rem;\r\n  margin-left: 1.3rem;\r\n}\r\n\r\n.sidebarHeader > .material-symbols-outlined {\r\n  padding-right: 0.25rem;\r\n}\r\n\r\n.sidebarTitle {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#tasks {\r\n  margin: 0 1rem 1rem 1rem;\r\n}\r\n\r\n.task {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.task:hover {\r\n  background-color: #35566b;\r\n  transition: 0.4s;\r\n}\r\n\r\n.task_active {\r\n  background-color: #35566b;\r\n}\r\n\r\n#addTaskInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin: 0rem 1rem 0 0.5rem;\r\n}\r\n\r\n::placeholder {\r\n  color: rgb(167, 167, 167);\r\n}\r\n\r\n.modifyingTasks {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.modifyingTasks > .material-symbols-outlined {\r\n  cursor: pointer;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\nmain {\r\n  grid-area: main;\r\n  background-color: #376e90;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.taskCard {\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background-color: #598cab;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.activityTitle {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  height: 2.5rem;\r\n  padding-left: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modifyingActivity {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n}\r\n\r\n.modifyingActivity > .material-symbols-outlined {\r\n  cursor: pointer;\r\n}\r\n\r\n#addActivityInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n}\r\n\r\n#activities {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.activity {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.activity:hover {\r\n  background-color: #5a8098;\r\n  transition: 0.4s;\r\n}\r\n\r\n.activity_active {\r\n  background-color: #5a8098;\r\n}\r\n'],sourceRoot:""}]);const A=o},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,a,i){"string"==typeof r&&(r=[[null,r,void 0]]);var o={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(o[s]=!0)}for(var d=0;d<r.length;d++){var c=[].concat(r[d]);t&&o[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */"),o=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(o).concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},o=[],A=0;A<r.length;A++){var s=r[A],d=t.base?s[0]+t.base:s[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var m=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)n[m].references++,n[m].updater(u);else{var p=a(u,t);t.byIndex=A,n.splice(A,0,{identifier:l,updater:p,references:1})}o.push(l)}return o}function a(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,a){var i=t(r=r||[],a=a||{});return function(r){r=r||[];for(var o=0;o<i.length;o++){var A=e(i[o]);n[A].references--}for(var s=t(r,a),d=0;d<i.length;d++){var c=e(i[d]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=s}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(t){var a=n[t];if(void 0!==a)return a.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),e.nc=void 0,(()=>{var r=e(379),n=e.n(r),t=e(795),a=e.n(t),i=e(569),o=e.n(i),A=e(565),s=e.n(A),d=e(216),c=e.n(d),l=e(589),m=e.n(l),u=e(28),p={};p.styleTagTransform=m(),p.setAttributes=s(),p.insert=o().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=c(),n()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const B=(()=>{const r=document.getElementById("content");return{createHeader:()=>{const n=document.createElement("header");r.appendChild(n);const e=document.createElement("span");e.classList.add("material-symbols-outlined"),e.innerText="event_available",n.appendChild(e);const t=document.createElement("div");t.classList.add("headerText"),t.innerText="Todo List",n.appendChild(t)},createSidebar:()=>{const n=document.createElement("div");n.classList.add("sidebar"),r.appendChild(n);const e=document.createElement("div");e.classList.add("sidebarHeader"),n.appendChild(e);const t=document.createElement("span");t.classList.add("material-symbols-outlined"),t.innerText="folder_open",e.appendChild(t);const a=document.createElement("div");a.classList.add("sidebarTitle"),a.innerText="My tasks",e.appendChild(a);const i=document.createElement("div");i.setAttribute("id","tasks"),n.appendChild(i);const o=document.createElement("form");o.classList.add("modifyingTasks"),n.appendChild(o);const A=document.createElement("input");A.setAttribute("type","text"),A.setAttribute("name","addTaskInput"),A.setAttribute("id","addTaskInput"),A.setAttribute("placeholder","Add new task"),A.setAttribute("maxlength","25"),A.setAttribute("autocomplete","off"),A.setAttribute("spellcheck","false"),o.appendChild(A);const s=document.createElement("button");s.classList.add("material-symbols-outlined"),s.setAttribute("type","reset"),s.classList.add("addTask"),s.innerText="add",o.appendChild(s)},createMain:()=>{const n=document.createElement("main");r.appendChild(n);const e=document.createElement("div");e.classList.add("taskCard"),n.appendChild(e);const t=document.createElement("div");t.classList.add("activityTitle"),t.innerText="Sample task nr 1",e.appendChild(t);const a=document.createElement("form");a.classList.add("modifyingActivity"),e.appendChild(a);const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","addActivityInput"),i.setAttribute("id","addActivityInput"),i.setAttribute("placeholder","Add new activity"),i.setAttribute("autocomplete","off"),i.setAttribute("spellcheck","false"),a.appendChild(i);const o=document.createElement("button");o.classList.add("material-symbols-outlined"),o.setAttribute("type","reset"),o.innerText="add",a.appendChild(o);const A=document.createElement("div");A.setAttribute("id","activities"),e.appendChild(A);const s=document.createElement("div");s.classList.add("activity"),s.innerText="Sample activity nr 1",A.appendChild(s)}}})(),E={refreshTasks:()=>{document.querySelectorAll(".task").forEach((r=>{r.remove()}))},addTasks:()=>{f.forEach((r=>{const n=document.createElement("div");n.classList.add("task"),""===r.name?n.innerText="Unnamed task":n.innerText=r.name,!0===r.isActive&&n.classList.add("task_active"),tasks.appendChild(n)})),(()=>{const r=document.querySelectorAll(".task");r.forEach(((r,n)=>{r.addEventListener("mouseenter",(()=>{const e=document.createElement("span");e.classList.add("material-symbols-outlined"),e.setAttribute("id","deleteTask"),e.innerText="delete",r.appendChild(e),g.removeFromArray(n)}))})),r.forEach((r=>{r.addEventListener("mouseleave",(()=>{document.getElementById("deleteTask").remove()}))}))})()}},f=[];class C{constructor(r,n){this.name=r,this.isActive=n}}const g=(()=>{const r=()=>{document.querySelectorAll(".task").forEach(((n,e)=>{n.addEventListener("click",(()=>{f.forEach((r=>{r.isActive=!1})),f[e].isActive=!0,E.refreshTasks(),E.addTasks(),r()}))}))};return{addToArray:()=>{document.querySelector(".addTask").addEventListener("click",(()=>{let n=new C(addTaskInput.value,!1);f.push(n),E.refreshTasks(),E.addTasks(),r()})),document.getElementById("addTaskInput").addEventListener("keypress",(n=>{if("Enter"===n.key){n.preventDefault();let e=new C(addTaskInput.value,!1);f.push(e),E.refreshTasks(),E.addTasks(),addTaskInput.value=null,r()}}))},removeFromArray:r=>{document.getElementById("deleteTask").addEventListener("click",(()=>{f.splice(r,1),f.forEach((r=>{r.isActive=!1})),E.refreshTasks(),E.addTasks()}))},makeActive:r}})();B.createHeader(),B.createSidebar(),B.createMain(),g.addToArray(),E.addTasks(),g.makeActive()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,