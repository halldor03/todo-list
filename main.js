(()=>{"use strict";var e={28:(e,r,n)=>{n.d(r,{Z:()=>s});var t=n(537),a=n.n(t),o=n(645),i=n.n(o)()(a());i.push([e.id,'/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  background-color: inherit;\r\n  border: 0;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-size: 1.75rem;\r\n  user-select: none;\r\n  font-weight: 200;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: 5rem 10fr;\r\n  grid-template-columns: 1fr 4fr;\r\n  grid-template-areas:\r\n    "header header"\r\n    "sidebar main";\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background-color: #3d81a3;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1.2rem;\r\n}\r\n\r\n.headerText {\r\n  font-size: 2rem;\r\n}\r\n\r\nheader > .material-symbols-outlined {\r\n  font-size: 2.4rem;\r\n  margin-top: 0.2rem;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.sidebar {\r\n  grid-area: sidebar;\r\n  background-color: #33617f;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: max-content;\r\n}\r\n\r\n.sidebarHeader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  height: 2.5rem;\r\n  margin: 1rem;\r\n  margin-left: 1.3rem;\r\n}\r\n\r\n.sidebarHeader > .material-symbols-outlined {\r\n  padding-right: 0.25rem;\r\n}\r\n\r\n.sidebarTitle {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#projects {\r\n  padding-top: 1rem;\r\n  margin: 0 1rem 1rem 1rem;\r\n}\r\n\r\n.project {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.project:hover {\r\n  background-color: #35566b;\r\n  transition: 0.4s;\r\n}\r\n\r\n.project_active {\r\n  background-color: #35566b;\r\n}\r\n\r\n#addProjectInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin: 0rem 1rem 0 0.5rem;\r\n}\r\n\r\n::placeholder {\r\n  color: rgb(167, 167, 167);\r\n}\r\n\r\n.modifyingProjects {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.modifyingProjects > .material-symbols-outlined {\r\n  cursor: pointer;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\nmain {\r\n  grid-area: main;\r\n  background-color: #376e90;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.selectProjectDiv {\r\n  padding-top: 2rem;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.projectCard {\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background-color: #598cab;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.projectTitle {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  height: 2.5rem;\r\n  padding-left: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modifyingTask {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n}\r\n\r\n.modifyingTask > .material-symbols-outlined {\r\n  cursor: pointer;\r\n}\r\n\r\n#addTaskInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n}\r\n\r\n#tasks {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.task {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.task:hover {\r\n  background-color: #5a8098;\r\n  transition: 0.4s;\r\n}\r\n\r\n.task_active {\r\n  background-color: #5a8098;\r\n}\r\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,kBAAkB;AAClB;;GAEG;;AAEH,iBAAiB;AACjB;EACE,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,4DAA4D;EAC5D,eAAe;EACf,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,6BAA6B;EAC7B,8BAA8B;EAC9B;;kBAEgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,qBAAqB;EACrB,cAAc;EACd,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,wBAAwB;AAC1B;;AAEA;EACE,cAAc;EACd,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;EACrB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,cAAc;EACd,cAAc;EACd,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,YAAY;EACZ,2CAA2C;EAC3C,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,aAAa;EACb,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,OAAO;EACP,sBAAsB;EACtB,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,cAAc;EACd,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,cAAc;EACd,cAAc;EACd,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,YAAY;EACZ,2CAA2C;EAC3C,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;EACrB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:['/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  background-color: inherit;\r\n  border: 0;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-size: 1.75rem;\r\n  user-select: none;\r\n  font-weight: 200;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: 5rem 10fr;\r\n  grid-template-columns: 1fr 4fr;\r\n  grid-template-areas:\r\n    "header header"\r\n    "sidebar main";\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background-color: #3d81a3;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1.2rem;\r\n}\r\n\r\n.headerText {\r\n  font-size: 2rem;\r\n}\r\n\r\nheader > .material-symbols-outlined {\r\n  font-size: 2.4rem;\r\n  margin-top: 0.2rem;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.sidebar {\r\n  grid-area: sidebar;\r\n  background-color: #33617f;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: max-content;\r\n}\r\n\r\n.sidebarHeader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  height: 2.5rem;\r\n  margin: 1rem;\r\n  margin-left: 1.3rem;\r\n}\r\n\r\n.sidebarHeader > .material-symbols-outlined {\r\n  padding-right: 0.25rem;\r\n}\r\n\r\n.sidebarTitle {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#projects {\r\n  padding-top: 1rem;\r\n  margin: 0 1rem 1rem 1rem;\r\n}\r\n\r\n.project {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.project:hover {\r\n  background-color: #35566b;\r\n  transition: 0.4s;\r\n}\r\n\r\n.project_active {\r\n  background-color: #35566b;\r\n}\r\n\r\n#addProjectInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin: 0rem 1rem 0 0.5rem;\r\n}\r\n\r\n::placeholder {\r\n  color: rgb(167, 167, 167);\r\n}\r\n\r\n.modifyingProjects {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.modifyingProjects > .material-symbols-outlined {\r\n  cursor: pointer;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\nmain {\r\n  grid-area: main;\r\n  background-color: #376e90;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.selectProjectDiv {\r\n  padding-top: 2rem;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.projectCard {\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background-color: #598cab;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.projectTitle {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  height: 2.5rem;\r\n  padding-left: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modifyingTask {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n}\r\n\r\n.modifyingTask > .material-symbols-outlined {\r\n  cursor: pointer;\r\n}\r\n\r\n#addTaskInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n}\r\n\r\n#tasks {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.task {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.task:hover {\r\n  background-color: #5a8098;\r\n  transition: 0.4s;\r\n}\r\n\r\n.task_active {\r\n  background-color: #5a8098;\r\n}\r\n'],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var n="",t=void 0!==r[5];return r[4]&&(n+="@supports (".concat(r[4],") {")),r[2]&&(n+="@media ".concat(r[2]," {")),t&&(n+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),n+=e(r),t&&(n+="}"),r[2]&&(n+="}"),r[4]&&(n+="}"),n})).join("")},r.i=function(e,n,t,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);t&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),r.push(c))}},r}},537:e=>{e.exports=function(e){var r=e[1],n=e[3];if(!n)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[r].concat(i).concat([o]).join("\n")}return[r].join("\n")}},379:e=>{var r=[];function n(e){for(var n=-1,t=0;t<r.length;t++)if(r[t].identifier===e){n=t;break}return n}function t(e,t){for(var o={},i=[],s=0;s<e.length;s++){var A=e[s],d=t.base?A[0]+t.base:A[0],c=o[d]||0,l="".concat(d," ").concat(c);o[d]=c+1;var m=n(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==m)r[m].references++,r[m].updater(u);else{var p=a(u,t);t.byIndex=s,r.splice(s,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function a(e,r){var n=r.domAPI(r);return n.update(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap&&r.supports===e.supports&&r.layer===e.layer)return;n.update(e=r)}else n.remove()}}e.exports=function(e,a){var o=t(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);r[s].references--}for(var A=t(e,a),d=0;d<o.length;d++){var c=n(o[d]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}o=A}}},569:e=>{var r={};e.exports=function(e,n){var t=function(e){if(void 0===r[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}r[e]=n}return r[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(n)}},216:e=>{e.exports=function(e){var r=document.createElement("style");return e.setAttributes(r,e.attributes),e.insert(r,e.options),r}},565:(e,r,n)=>{e.exports=function(e){var r=n.nc;r&&e.setAttribute("nonce",r)}},795:e=>{e.exports=function(e){var r=e.insertStyleElement(e);return{update:function(n){!function(e,r,n){var t="";n.supports&&(t+="@supports (".concat(n.supports,") {")),n.media&&(t+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(t+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),t+=n.css,a&&(t+="}"),n.media&&(t+="}"),n.supports&&(t+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,e,r.options)}(r,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)}}}},589:e=>{e.exports=function(e,r){if(r.styleSheet)r.styleSheet.cssText=e;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(e))}}}},r={};function n(t){var a=r[t];if(void 0!==a)return a.exports;var o=r[t]={id:t,exports:{}};return e[t](o,o.exports,n),o.exports}n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),n.nc=void 0,(()=>{var e=n(379),r=n.n(e),t=n(795),a=n.n(t),o=n(569),i=n.n(o),s=n(565),A=n.n(s),d=n(216),c=n.n(d),l=n(589),m=n.n(l),u=n(28),p={};p.styleTagTransform=m(),p.setAttributes=A(),p.insert=i().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=c(),r()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const B=(()=>{const e=document.getElementById("content");return{createHeader:()=>{const r=document.createElement("header");e.appendChild(r);const n=document.createElement("span");n.classList.add("material-symbols-outlined"),n.innerText="event_available",r.appendChild(n);const t=document.createElement("div");t.classList.add("headerText"),t.innerText="Todo List",r.appendChild(t)},createSidebar:()=>{const r=document.createElement("div");r.classList.add("sidebar"),e.appendChild(r);const n=document.createElement("div");n.classList.add("sidebarHeader"),r.appendChild(n);const t=document.createElement("span");t.classList.add("material-symbols-outlined"),t.innerText="folder_open",n.appendChild(t);const a=document.createElement("div");a.classList.add("sidebarTitle"),a.innerText="My projects",n.appendChild(a);const o=document.createElement("form");o.classList.add("modifyingProjects"),r.appendChild(o);const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","addProjectInput"),i.setAttribute("id","addProjectInput"),i.setAttribute("placeholder","Add new project"),i.setAttribute("maxlength","25"),i.setAttribute("autocomplete","off"),i.setAttribute("spellcheck","false"),o.appendChild(i);const s=document.createElement("button");s.classList.add("material-symbols-outlined"),s.setAttribute("type","reset"),s.classList.add("addProject"),s.innerText="add",o.appendChild(s);const A=document.createElement("div");A.setAttribute("id","projects"),r.appendChild(A)},createMain:()=>{const r=document.createElement("main");e.appendChild(r)},createCard:()=>{const e=document.createElement("div"),r=document.querySelector("main");e.classList.add("projectCard"),r.appendChild(e);const n=document.createElement("div");n.classList.add("projectTitle"),n.innerText="Sample project_title",e.appendChild(n);const t=document.createElement("form");t.classList.add("modifyingTask"),e.appendChild(t);const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("name","addTaskInput"),a.setAttribute("id","addTaskInput"),a.setAttribute("placeholder","Add new task"),a.setAttribute("autocomplete","off"),a.setAttribute("spellcheck","false"),t.appendChild(a);const o=document.createElement("button");o.classList.add("material-symbols-outlined"),o.setAttribute("type","reset"),o.classList.add("addTask"),o.innerText="add",t.appendChild(o);const i=document.createElement("div");i.setAttribute("id","tasks"),e.appendChild(i)}}})(),E=(()=>{const e=()=>{const e=document.querySelector(".projectCard"),r=document.querySelector("main");if(null!==e){e.remove();const n=document.createElement("div");n.setAttribute("class","selectProjectDiv"),n.innerText="Please select an active project from the list",r.appendChild(n)}};return{refreshProjects:()=>{document.querySelectorAll(".project").forEach((e=>{e.remove()}))},addProjects:()=>{f.forEach(((e,r)=>{const n=document.querySelector("#projects"),t=document.createElement("div");t.classList.add("project"),""===e.name?t.innerText="Unnamed project":t.innerText=e.name,n.appendChild(t),e.isActive&&t.classList.add("project_active")})),null===document.querySelector(".project_active")&&e(),(()=>{const e=document.querySelectorAll(".project");e.forEach(((e,r)=>{e.addEventListener("mouseenter",(()=>{const n=document.createElement("span");n.classList.add("material-symbols-outlined"),n.setAttribute("id","deleteProject"),n.innerText="delete",e.appendChild(n),g.removeProjectFromArray(r)}))})),e.forEach((e=>{e.addEventListener("mouseleave",(()=>{document.getElementById("deleteProject").remove()}))}))})(),document.getElementById("addProjectInput")},addTasks:e=>{document.querySelector(".projectCard"),B.createCard(),document.getElementById("addTaskInput").focus();const r=document.querySelector(".projectTitle");r.innerText=e.name,""===e.name&&(r.innerText="Unnamed project");const n=e.tasks,t=document.querySelector("#tasks");n.forEach((e=>{const r=document.createElement("div");r.classList.add("task"),r.innerText=""===e?"Unnamed task":e,t.appendChild(r)})),(()=>{const e=document.querySelectorAll(".task");e.forEach(((e,r)=>{e.addEventListener("mouseenter",(()=>{const n=document.createElement("span");n.classList.add("material-symbols-outlined"),n.setAttribute("id","deleteProject"),n.innerText="delete",e.appendChild(n),g.removeTaskFromArray(r)}))})),e.forEach((e=>{e.addEventListener("mouseleave",(()=>{document.getElementById("deleteProject").remove()}))}))})()},refreshTasks:()=>{const e=document.querySelector(".selectProjectDiv");null!==e&&e.remove();const r=document.querySelector(".projectCard");null!==r&&r.remove()},noActiveProjects:e}})(),f=[{name:"Clean the house",isActive:!0,tasks:["make a bed","wash the dishes","vacuum the room","clean the windows"]},{name:"Study for school",isActive:!1,tasks:["study for physics quiz","study for biology quiz","do the homework","chill afterwards"]}];class C{constructor(e,r,n){this.name=e,this.isActive=r,this.tasks=n}}const g=(()=>{const e=()=>{document.querySelectorAll(".project").forEach(((n,t)=>{n.addEventListener("click",(()=>{f.forEach((e=>{e.isActive=!1})),f[t].isActive=!0,E.refreshProjects(),E.addProjects(),r(),e()}))}))},r=()=>{const e=f.find((e=>!0===e.isActive)),n=e.tasks;console.log(n),E.refreshTasks(),E.addTasks(e);const t=document.getElementById("addTaskInput");document.querySelector(".addTask").addEventListener("click",(()=>{let a=t.value;n.push(a),E.refreshTasks(),E.addTasks(e),r(),console.log(n)})),t.addEventListener("keypress",(a=>{if("Enter"===a.key){a.preventDefault();let o=t.value;n.push(o),E.refreshTasks(),E.addTasks(e),r(),t.value=null,console.log(n)}}))};return{addProjectToArray:()=>{const r=document.getElementById("addProjectInput");document.querySelector(".addProject").addEventListener("click",(()=>{let n=new C(r.value,!1,[]);f.push(n),E.refreshProjects(),E.addProjects(),e()})),r.addEventListener("keypress",(n=>{if("Enter"===n.key){n.preventDefault();let t=new C(r.value,!1,[]);f.push(t),E.refreshProjects(),E.addProjects(),r.value=null,e()}}))},removeProjectFromArray:r=>{document.getElementById("deleteProject").addEventListener("click",(n=>{n.stopPropagation(),f.splice(r,1),E.refreshProjects(),E.addProjects(),e()}))},projectMakeActive:e,addSampleProject:()=>{const e=new C("Buy groceries",!1,["2 carrots","3 tomatoes","1 banana","4 avocado","1 kiwi"]);f.push(e),E.addProjects()},addTaskToArray:r,removeTaskFromArray:e=>{const n=f.find((e=>!0===e.isActive)),t=n.tasks;console.log(t),document.getElementById("deleteProject").addEventListener("click",(a=>{a.stopPropagation(),t.splice(e,1),E.refreshTasks(),E.addTasks(n),r()}))}}})();B.createHeader(),B.createSidebar(),B.createMain(),B.createCard(),g.addProjectToArray(),g.addSampleProject(),g.projectMakeActive(),g.addTaskToArray()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,