(()=>{"use strict";var e={28:(e,r,n)=>{n.d(r,{Z:()=>s});var t=n(537),a=n.n(t),o=n(645),i=n.n(o)()(a());i.push([e.id,'/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  background-color: inherit;\r\n  border: 0;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-size: 1.75rem;\r\n  user-select: none;\r\n  font-weight: 200;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: 5rem 10fr;\r\n  grid-template-columns: 1fr 4fr;\r\n  grid-template-areas:\r\n    "header header"\r\n    "sidebar main";\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background-color: #3d81a3;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1.2rem;\r\n}\r\n\r\n.headerText {\r\n  font-size: 2rem;\r\n}\r\n\r\nheader > .material-symbols-outlined {\r\n  font-size: 2.4rem;\r\n  margin-top: 0.2rem;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.sidebar {\r\n  grid-area: sidebar;\r\n  background-color: #33617f;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: max-content;\r\n}\r\n\r\n.sidebarHeader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  height: 2.5rem;\r\n  margin: 1rem;\r\n  margin-left: 1.3rem;\r\n}\r\n\r\n.sidebarHeader > .material-symbols-outlined {\r\n  padding-right: 0.25rem;\r\n}\r\n\r\n.sidebarTitle {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#projects {\r\n  padding-top: 1rem;\r\n  margin: 0 1rem 1rem 1rem;\r\n}\r\n\r\n.project {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.project:hover {\r\n  background-color: #35566b;\r\n  transition: 0.4s;\r\n}\r\n\r\n.project_active {\r\n  background-color: #35566b;\r\n}\r\n\r\n#addProjectInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin: 0rem 1rem 0 0.5rem;\r\n}\r\n\r\n::placeholder {\r\n  color: rgb(167, 167, 167);\r\n}\r\n\r\n.modifyingProjects {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.modifyingProjects > .material-symbols-outlined {\r\n  cursor: pointer;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\nmain {\r\n  grid-area: main;\r\n  background-color: #376e90;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.selectProjectDiv {\r\n  padding-top: 2rem;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.projectCard {\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background-color: #598cab;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.projectTitle {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  height: 2.5rem;\r\n  padding-left: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modifyingTask {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n}\r\n\r\n.modifyingTask > .material-symbols-outlined {\r\n  cursor: pointer;\r\n}\r\n\r\n#addTaskInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n}\r\n\r\n#tasks {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.task {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.task:hover {\r\n  background-color: #5a8098;\r\n  transition: 0.4s;\r\n}\r\n\r\n.task_active {\r\n  background-color: #5a8098;\r\n}\r\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,kBAAkB;AAClB;;GAEG;;AAEH,iBAAiB;AACjB;EACE,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,4DAA4D;EAC5D,eAAe;EACf,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,6BAA6B;EAC7B,8BAA8B;EAC9B;;kBAEgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,qBAAqB;EACrB,cAAc;EACd,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,wBAAwB;AAC1B;;AAEA;EACE,cAAc;EACd,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;EACrB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,cAAc;EACd,cAAc;EACd,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,YAAY;EACZ,2CAA2C;EAC3C,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,aAAa;EACb,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,OAAO;EACP,sBAAsB;EACtB,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,cAAc;EACd,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,cAAc;EACd,cAAc;EACd,WAAW;EACX,aAAa;EACb,yBAAyB;EACzB,YAAY;EACZ,2CAA2C;EAC3C,aAAa;EACb,qBAAqB;EACrB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,qBAAqB;EACrB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:['/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  background-color: inherit;\r\n  border: 0;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-size: 1.75rem;\r\n  user-select: none;\r\n  font-weight: 200;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: 5rem 10fr;\r\n  grid-template-columns: 1fr 4fr;\r\n  grid-template-areas:\r\n    "header header"\r\n    "sidebar main";\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background-color: #3d81a3;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 1.2rem;\r\n}\r\n\r\n.headerText {\r\n  font-size: 2rem;\r\n}\r\n\r\nheader > .material-symbols-outlined {\r\n  font-size: 2.4rem;\r\n  margin-top: 0.2rem;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.sidebar {\r\n  grid-area: sidebar;\r\n  background-color: #33617f;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: max-content;\r\n}\r\n\r\n.sidebarHeader {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: left;\r\n  height: 2.5rem;\r\n  margin: 1rem;\r\n  margin-left: 1.3rem;\r\n}\r\n\r\n.sidebarHeader > .material-symbols-outlined {\r\n  padding-right: 0.25rem;\r\n}\r\n\r\n.sidebarTitle {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n#projects {\r\n  padding-top: 1rem;\r\n  margin: 0 1rem 1rem 1rem;\r\n}\r\n\r\n.project {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.project:hover {\r\n  background-color: #35566b;\r\n  transition: 0.4s;\r\n}\r\n\r\n.project_active {\r\n  background-color: #35566b;\r\n}\r\n\r\n#addProjectInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin: 0rem 1rem 0 0.5rem;\r\n}\r\n\r\n::placeholder {\r\n  color: rgb(167, 167, 167);\r\n}\r\n\r\n.modifyingProjects {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.modifyingProjects > .material-symbols-outlined {\r\n  cursor: pointer;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\nmain {\r\n  grid-area: main;\r\n  background-color: #376e90;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.selectProjectDiv {\r\n  padding-top: 2rem;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.projectCard {\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  background-color: #598cab;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.projectTitle {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  height: 2.5rem;\r\n  padding-left: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modifyingTask {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n}\r\n\r\n.modifyingTask > .material-symbols-outlined {\r\n  cursor: pointer;\r\n}\r\n\r\n#addTaskInput {\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  outline: none;\r\n  background-color: inherit;\r\n  border: none;\r\n  border-bottom: 1px solid rgb(167, 167, 167);\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n}\r\n\r\n#tasks {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.task {\r\n  height: 2.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.task:hover {\r\n  background-color: #5a8098;\r\n  transition: 0.4s;\r\n}\r\n\r\n.task_active {\r\n  background-color: #5a8098;\r\n}\r\n'],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var n="",t=void 0!==r[5];return r[4]&&(n+="@supports (".concat(r[4],") {")),r[2]&&(n+="@media ".concat(r[2]," {")),t&&(n+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),n+=e(r),t&&(n+="}"),r[2]&&(n+="}"),r[4]&&(n+="}"),n})).join("")},r.i=function(e,n,t,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);t&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),r.push(d))}},r}},537:e=>{e.exports=function(e){var r=e[1],n=e[3];if(!n)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[r].concat(i).concat([o]).join("\n")}return[r].join("\n")}},379:e=>{var r=[];function n(e){for(var n=-1,t=0;t<r.length;t++)if(r[t].identifier===e){n=t;break}return n}function t(e,t){for(var o={},i=[],s=0;s<e.length;s++){var A=e[s],c=t.base?A[0]+t.base:A[0],d=o[c]||0,l="".concat(c," ").concat(d);o[c]=d+1;var m=n(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==m)r[m].references++,r[m].updater(u);else{var p=a(u,t);t.byIndex=s,r.splice(s,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function a(e,r){var n=r.domAPI(r);return n.update(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap&&r.supports===e.supports&&r.layer===e.layer)return;n.update(e=r)}else n.remove()}}e.exports=function(e,a){var o=t(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);r[s].references--}for(var A=t(e,a),c=0;c<o.length;c++){var d=n(o[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}o=A}}},569:e=>{var r={};e.exports=function(e,n){var t=function(e){if(void 0===r[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}r[e]=n}return r[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(n)}},216:e=>{e.exports=function(e){var r=document.createElement("style");return e.setAttributes(r,e.attributes),e.insert(r,e.options),r}},565:(e,r,n)=>{e.exports=function(e){var r=n.nc;r&&e.setAttribute("nonce",r)}},795:e=>{e.exports=function(e){var r=e.insertStyleElement(e);return{update:function(n){!function(e,r,n){var t="";n.supports&&(t+="@supports (".concat(n.supports,") {")),n.media&&(t+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(t+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),t+=n.css,a&&(t+="}"),n.media&&(t+="}"),n.supports&&(t+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,e,r.options)}(r,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)}}}},589:e=>{e.exports=function(e,r){if(r.styleSheet)r.styleSheet.cssText=e;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(e))}}}},r={};function n(t){var a=r[t];if(void 0!==a)return a.exports;var o=r[t]={id:t,exports:{}};return e[t](o,o.exports,n),o.exports}n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),n.nc=void 0,(()=>{var e=n(379),r=n.n(e),t=n(795),a=n.n(t),o=n(569),i=n.n(o),s=n(565),A=n.n(s),c=n(216),d=n.n(c),l=n(589),m=n.n(l),u=n(28),p={};p.styleTagTransform=m(),p.setAttributes=A(),p.insert=i().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=d(),r()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const B=(()=>{const e=document.getElementById("content");return{createHeader:()=>{const r=document.createElement("header");e.appendChild(r);const n=document.createElement("span");n.classList.add("material-symbols-outlined"),n.innerText="event_available",r.appendChild(n);const t=document.createElement("div");t.classList.add("headerText"),t.innerText="Todo List",r.appendChild(t)},createSidebar:()=>{const r=document.createElement("div");r.classList.add("sidebar"),e.appendChild(r);const n=document.createElement("div");n.classList.add("sidebarHeader"),r.appendChild(n);const t=document.createElement("span");t.classList.add("material-symbols-outlined"),t.innerText="folder_open",n.appendChild(t);const a=document.createElement("div");a.classList.add("sidebarTitle"),a.innerText="My projects",n.appendChild(a);const o=document.createElement("form");o.classList.add("modifyingProjects"),r.appendChild(o);const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","addProjectInput"),i.setAttribute("id","addProjectInput"),i.setAttribute("placeholder","Add new project"),i.setAttribute("maxlength","25"),i.setAttribute("autocomplete","off"),i.setAttribute("spellcheck","false"),o.appendChild(i);const s=document.createElement("button");s.classList.add("material-symbols-outlined"),s.setAttribute("type","reset"),s.classList.add("addProject"),s.innerText="add",o.appendChild(s);const A=document.createElement("div");A.setAttribute("id","projects"),r.appendChild(A)},createMain:()=>{const r=document.createElement("main");e.appendChild(r)},createCard:()=>{const e=document.createElement("div"),r=document.querySelector("main");e.classList.add("projectCard"),r.appendChild(e);const n=document.createElement("div");n.classList.add("projectTitle"),n.innerText="Sample project_title",e.appendChild(n);const t=document.createElement("form");t.classList.add("modifyingTask"),e.appendChild(t);const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("name","addTaskInput"),a.setAttribute("id","addTaskInput"),a.setAttribute("placeholder","Add new task"),a.setAttribute("autocomplete","off"),a.setAttribute("spellcheck","false"),t.appendChild(a);const o=document.createElement("button");o.classList.add("material-symbols-outlined"),o.setAttribute("type","reset"),o.classList.add("addTask"),o.innerText="add",t.appendChild(o);const i=document.createElement("div");i.setAttribute("id","tasks"),e.appendChild(i)}}})(),E=(()=>{const e=()=>{const e=document.querySelector(".projectCard"),r=document.querySelector("main");e.remove();const n=document.createElement("div");n.setAttribute("class","selectProjectDiv"),n.innerText="Please select an active project from the list",r.appendChild(n)};return{refreshProjects:()=>{document.querySelectorAll(".project").forEach((e=>{e.remove()}))},addProjects:()=>{f.forEach((e=>{const r=document.querySelector("#projects"),n=document.createElement("div");n.classList.add("project"),""===e.name?n.innerText="Unnamed project":n.innerText=e.name,r.appendChild(n),e.isActive&&n.classList.add("project_active")}));const r=document.querySelector(".project_active"),n=document.querySelector(".projectCard");null===r&&null!==n&&e(),(()=>{const e=document.querySelectorAll(".project");e.forEach(((e,r)=>{e.addEventListener("mouseenter",(()=>{const n=document.createElement("span");n.classList.add("material-symbols-outlined"),n.setAttribute("id","deleteIcon"),n.innerText="delete",e.appendChild(n),g.removeProjectFromArray(r)}))})),e.forEach((e=>{e.addEventListener("mouseleave",(()=>{document.getElementById("deleteIcon").remove()}))}))})()},addTasks:e=>{B.createCard(),document.getElementById("addTaskInput").focus();const r=document.querySelector(".projectTitle");r.innerText=e.name,""===e.name&&(r.innerText="Unnamed project");const n=e.tasks,t=document.querySelector("#tasks");n.forEach((e=>{const r=document.createElement("div");r.classList.add("task"),r.innerText=""===e?"Unnamed task":e,t.appendChild(r)})),(()=>{const e=document.querySelectorAll(".task");e.forEach(((e,r)=>{e.addEventListener("mouseenter",(()=>{const n=document.createElement("span");n.classList.add("material-symbols-outlined"),n.setAttribute("id","deleteIcon"),n.innerText="delete",e.appendChild(n),g.removeTaskFromArray(r)}))})),e.forEach((e=>{e.addEventListener("mouseleave",(()=>{document.getElementById("deleteIcon").remove()}))}))})()},refreshTasks:()=>{const e=document.querySelector(".selectProjectDiv");null!==e&&e.remove();const r=document.querySelector(".projectCard");null!==r&&r.remove()},noActiveProjects:e}})(),f=[{name:"Clean the house",isActive:!0,tasks:["Make a bed","Wash the dishes","Vacuum the room","Clean the windows"]},{name:"Study for school",isActive:!1,tasks:["Study for physics quiz","Study for biology quiz","Do the homework","Chill afterwards"]},{name:"Buy groceries",isActive:!1,tasks:["2 carrots","3 tomatoes","1 banana","4 avocado","1 kiwi","2 apples"]}];class C{constructor(e,r,n){this.name=e,this.isActive=r,this.tasks=n}}const g=(()=>{const e=()=>{document.querySelectorAll(".project").forEach(((n,t)=>{n.addEventListener("click",(()=>{f.forEach((e=>{e.isActive=!1})),f[t].isActive=!0,E.refreshProjects(),E.addProjects(),r(f[t]),e()}))}))},r=e=>{const n=e.tasks;E.refreshTasks(),E.addTasks(e);const t=document.getElementById("addTaskInput");document.querySelector(".addTask").addEventListener("click",(()=>{let a=t.value;n.push(a),E.refreshTasks(),E.addTasks(e),r(e)})),t.addEventListener("keypress",(a=>{if("Enter"===a.key){a.preventDefault();let o=t.value;n.push(o),E.refreshTasks(),E.addTasks(e),r(e),t.value=null}}))};return{addProjectToArray:()=>{const r=document.getElementById("addProjectInput");document.querySelector(".addProject").addEventListener("click",(()=>{let n=new C(r.value,!1,[]);f.push(n),E.refreshProjects(),E.addProjects(),e()})),r.addEventListener("keypress",(n=>{if("Enter"===n.key){n.preventDefault();let t=new C(r.value,!1,[]);f.push(t),E.refreshProjects(),E.addProjects(),r.value=null,e()}}))},removeProjectFromArray:r=>{document.getElementById("deleteIcon").addEventListener("click",(n=>{n.stopPropagation(),f.splice(r,1),E.refreshProjects(),E.addProjects(),e()}))},activateProjectSelection:e,addTaskToArray:r,removeTaskFromArray:e=>{const n=f.find((e=>!0===e.isActive)),t=n.tasks;document.getElementById("deleteIcon").addEventListener("click",(a=>{a.stopPropagation(),t.splice(e,1),E.refreshTasks(),E.addTasks(n),r(n)}))},findActiveProject:()=>{const e=f.find((e=>!0===e.isActive));r(e)}}})();B.createHeader(),B.createSidebar(),B.createMain(),B.createCard(),g.addProjectToArray(),g.findActiveProject(),E.addProjects(),g.activateProjectSelection()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c3QvLi9zcmMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlcy5jc3M/NDRiMiIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvY3JlYXRlRE9NLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tYW5pcHVsYXRlRE9NLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9sb2dpYy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKiB0byBzaG93IGJveGVzICovXFxyXFxuLyogKiB7XFxyXFxuICBib3JkZXI6IDFweCBibGFjayBzb2xpZDtcXHJcXG59ICovXFxyXFxuXFxyXFxuLyogc2ltcGxlIHJlc2V0ICovXFxyXFxuKiB7XFxyXFxuICBwYWRkaW5nOiAwcHg7XFxyXFxuICBtYXJnaW46IDBweDtcXHJcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuICBmb250LWZhbWlseTogXFxcIlNlZ29lIFVJXFxcIiwgVGFob21hLCBHZW5ldmEsIFZlcmRhbmEsIHNhbnMtc2VyaWY7XFxyXFxuICBmb250LXNpemU6IDE4cHg7XFxyXFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuICBjb2xvcjogd2hpdGU7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbiB7XFxyXFxuICBhcHBlYXJhbmNlOiBub25lO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcXHJcXG4gIGJvcmRlcjogMDtcXHJcXG59XFxyXFxuXFxyXFxuLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcclxcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xcclxcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxyXFxuICBmb250LXdlaWdodDogMjAwO1xcclxcbn1cXHJcXG5cXHJcXG4jY29udGVudCB7XFxyXFxuICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgZGlzcGxheTogZ3JpZDtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogNXJlbSAxMGZyO1xcclxcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNGZyO1xcclxcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcXHJcXG4gICAgXFxcImhlYWRlciBoZWFkZXJcXFwiXFxyXFxuICAgIFxcXCJzaWRlYmFyIG1haW5cXFwiO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIge1xcclxcbiAgZ3JpZC1hcmVhOiBoZWFkZXI7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Q4MWEzO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBwYWRkaW5nLWxlZnQ6IDEuMnJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLmhlYWRlclRleHQge1xcclxcbiAgZm9udC1zaXplOiAycmVtO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIgPiAubWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB7XFxyXFxuICBmb250LXNpemU6IDIuNHJlbTtcXHJcXG4gIG1hcmdpbi10b3A6IDAuMnJlbTtcXHJcXG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciB7XFxyXFxuICBncmlkLWFyZWE6IHNpZGViYXI7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzM2MTdmO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBtaW4td2lkdGg6IG1heC1jb250ZW50O1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhckhlYWRlciB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogbGVmdDtcXHJcXG4gIGhlaWdodDogMi41cmVtO1xcclxcbiAgbWFyZ2luOiAxcmVtO1xcclxcbiAgbWFyZ2luLWxlZnQ6IDEuM3JlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXJIZWFkZXIgPiAubWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB7XFxyXFxuICBwYWRkaW5nLXJpZ2h0OiAwLjI1cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhclRpdGxlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jcHJvamVjdHMge1xcclxcbiAgcGFkZGluZy10b3A6IDFyZW07XFxyXFxuICBtYXJnaW46IDAgMXJlbSAxcmVtIDFyZW07XFxyXFxufVxcclxcblxcclxcbi5wcm9qZWN0IHtcXHJcXG4gIGhlaWdodDogMi41cmVtO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBib3JkZXItcmFkaXVzOiAwLjVyZW07XFxyXFxuICBwYWRkaW5nOiAwLjVyZW07XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5wcm9qZWN0OmhvdmVyIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNTU2NmI7XFxyXFxuICB0cmFuc2l0aW9uOiAwLjRzO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdF9hY3RpdmUge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM1NTY2YjtcXHJcXG59XFxyXFxuXFxyXFxuI2FkZFByb2plY3RJbnB1dCB7XFxyXFxuICBhcHBlYXJhbmNlOiBub25lO1xcclxcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XFxyXFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxyXFxuICBjb2xvcjogaW5oZXJpdDtcXHJcXG4gIGhlaWdodDogMi41cmVtO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBvdXRsaW5lOiBub25lO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2IoMTY3LCAxNjcsIDE2Nyk7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIG1hcmdpbjogMHJlbSAxcmVtIDAgMC41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG46OnBsYWNlaG9sZGVyIHtcXHJcXG4gIGNvbG9yOiByZ2IoMTY3LCAxNjcsIDE2Nyk7XFxyXFxufVxcclxcblxcclxcbi5tb2RpZnlpbmdQcm9qZWN0cyB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIG1hcmdpbjogMCAxcmVtIDAgMXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGlmeWluZ1Byb2plY3RzID4gLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XFxyXFxufVxcclxcblxcclxcbm1haW4ge1xcclxcbiAgZ3JpZC1hcmVhOiBtYWluO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM3NmU5MDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uc2VsZWN0UHJvamVjdERpdiB7XFxyXFxuICBwYWRkaW5nLXRvcDogMnJlbTtcXHJcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdENhcmQge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXg6IDE7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU5OGNhYjtcXHJcXG4gIG1hcmdpbjogMXJlbTtcXHJcXG4gIHBhZGRpbmc6IDFyZW07XFxyXFxuICBib3JkZXItcmFkaXVzOiAxcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdFRpdGxlIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgZm9udC1zaXplOiAxLjVyZW07XFxyXFxuICBoZWlnaHQ6IDIuNXJlbTtcXHJcXG4gIHBhZGRpbmctbGVmdDogMC41cmVtO1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGlmeWluZ1Rhc2sge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcXHJcXG4gIHBhZGRpbmctcmlnaHQ6IDAuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGlmeWluZ1Rhc2sgPiAubWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbiNhZGRUYXNrSW5wdXQge1xcclxcbiAgYXBwZWFyYW5jZTogbm9uZTtcXHJcXG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xcclxcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcclxcbiAgY29sb3I6IGluaGVyaXQ7XFxyXFxuICBoZWlnaHQ6IDIuNXJlbTtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgb3V0bGluZTogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDE2NywgMTY3LCAxNjcpO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogbGVmdDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDFyZW07XFxyXFxufVxcclxcblxcclxcbiN0YXNrcyB7XFxyXFxuICBtYXJnaW4tdG9wOiAxcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4udGFzayB7XFxyXFxuICBoZWlnaHQ6IDIuNXJlbTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgcGFkZGluZzogMC41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4udGFzazpob3ZlciB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWE4MDk4O1xcclxcbiAgdHJhbnNpdGlvbjogMC40cztcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2tfYWN0aXZlIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICM1YTgwOTg7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBh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O0VBQ25CLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogdG8gc2hvdyBib3hlcyAqL1xcclxcbi8qICoge1xcclxcbiAgYm9yZGVyOiAxcHggYmxhY2sgc29saWQ7XFxyXFxufSAqL1xcclxcblxcclxcbi8qIHNpbXBsZSByZXNldCAqL1xcclxcbioge1xcclxcbiAgcGFkZGluZzogMHB4O1xcclxcbiAgbWFyZ2luOiAwcHg7XFxyXFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbiAgZm9udC1mYW1pbHk6IFxcXCJTZWdvZSBVSVxcXCIsIFRhaG9tYSwgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xcclxcbiAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcclxcbiAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG5idXR0b24ge1xcclxcbiAgYXBwZWFyYW5jZTogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XFxyXFxuICBib3JkZXI6IDA7XFxyXFxufVxcclxcblxcclxcbi5tYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIHtcXHJcXG4gIGZvbnQtc2l6ZTogMS43NXJlbTtcXHJcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcclxcbiAgZm9udC13ZWlnaHQ6IDIwMDtcXHJcXG59XFxyXFxuXFxyXFxuI2NvbnRlbnQge1xcclxcbiAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDVyZW0gMTBmcjtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDRmcjtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxyXFxuICAgIFxcXCJoZWFkZXIgaGVhZGVyXFxcIlxcclxcbiAgICBcXFwic2lkZWJhciBtYWluXFxcIjtcXHJcXG59XFxyXFxuXFxyXFxuaGVhZGVyIHtcXHJcXG4gIGdyaWQtYXJlYTogaGVhZGVyO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNkODFhMztcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgcGFkZGluZy1sZWZ0OiAxLjJyZW07XFxyXFxufVxcclxcblxcclxcbi5oZWFkZXJUZXh0IHtcXHJcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXHJcXG59XFxyXFxuXFxyXFxuaGVhZGVyID4gLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcclxcbiAgZm9udC1zaXplOiAyLjRyZW07XFxyXFxuICBtYXJnaW4tdG9wOiAwLjJyZW07XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXIge1xcclxcbiAgZ3JpZC1hcmVhOiBzaWRlYmFyO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzNjE3ZjtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgbWluLXdpZHRoOiBtYXgtY29udGVudDtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXJIZWFkZXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XFxyXFxuICBoZWlnaHQ6IDIuNXJlbTtcXHJcXG4gIG1hcmdpbjogMXJlbTtcXHJcXG4gIG1hcmdpbi1sZWZ0OiAxLjNyZW07XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFySGVhZGVyID4gLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcclxcbiAgcGFkZGluZy1yaWdodDogMC4yNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXJUaXRsZSB7XFxyXFxuICBmb250LXNpemU6IDEuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuI3Byb2plY3RzIHtcXHJcXG4gIHBhZGRpbmctdG9wOiAxcmVtO1xcclxcbiAgbWFyZ2luOiAwIDFyZW0gMXJlbSAxcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdCB7XFxyXFxuICBoZWlnaHQ6IDIuNXJlbTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xcclxcbiAgcGFkZGluZzogMC41cmVtO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdDpob3ZlciB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzU1NjZiO1xcclxcbiAgdHJhbnNpdGlvbjogMC40cztcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3RfYWN0aXZlIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNTU2NmI7XFxyXFxufVxcclxcblxcclxcbiNhZGRQcm9qZWN0SW5wdXQge1xcclxcbiAgYXBwZWFyYW5jZTogbm9uZTtcXHJcXG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xcclxcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcclxcbiAgY29sb3I6IGluaGVyaXQ7XFxyXFxuICBoZWlnaHQ6IDIuNXJlbTtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgb3V0bGluZTogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDE2NywgMTY3LCAxNjcpO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogbGVmdDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBtYXJnaW46IDByZW0gMXJlbSAwIDAuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuOjpwbGFjZWhvbGRlciB7XFxyXFxuICBjb2xvcjogcmdiKDE2NywgMTY3LCAxNjcpO1xcclxcbn1cXHJcXG5cXHJcXG4ubW9kaWZ5aW5nUHJvamVjdHMge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBtYXJnaW46IDAgMXJlbSAwIDFyZW07XFxyXFxufVxcclxcblxcclxcbi5tb2RpZnlpbmdQcm9qZWN0cyA+IC5tYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIHtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIHtcXHJcXG4gIGdyaWQtYXJlYTogbWFpbjtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNzZlOTA7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLnNlbGVjdFByb2plY3REaXYge1xcclxcbiAgcGFkZGluZy10b3A6IDJyZW07XFxyXFxuICBmb250LXNpemU6IDEuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3RDYXJkIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4OiAxO1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICM1OThjYWI7XFxyXFxuICBtYXJnaW46IDFyZW07XFxyXFxuICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3RUaXRsZSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgaGVpZ2h0OiAyLjVyZW07XFxyXFxuICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XFxyXFxufVxcclxcblxcclxcbi5tb2RpZnlpbmdUYXNrIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XFxyXFxuICBwYWRkaW5nLXJpZ2h0OiAwLjVyZW07XFxyXFxufVxcclxcblxcclxcbi5tb2RpZnlpbmdUYXNrID4gLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4jYWRkVGFza0lucHV0IHtcXHJcXG4gIGFwcGVhcmFuY2U6IG5vbmU7XFxyXFxuICBmb250LWZhbWlseTogaW5oZXJpdDtcXHJcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXHJcXG4gIGNvbG9yOiBpbmhlcml0O1xcclxcbiAgaGVpZ2h0OiAyLjVyZW07XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYigxNjcsIDE2NywgMTY3KTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jdGFza3Mge1xcclxcbiAgbWFyZ2luLXRvcDogMXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2sge1xcclxcbiAgaGVpZ2h0OiAyLjVyZW07XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIHBhZGRpbmc6IDAuNXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2s6aG92ZXIge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVhODA5ODtcXHJcXG4gIHRyYW5zaXRpb246IDAuNHM7XFxyXFxufVxcclxcblxcclxcbi50YXNrX2FjdGl2ZSB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWE4MDk4O1xcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY29uc3QgY3JlYXRlRE9NID0gKCgpID0+IHtcclxuICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpO1xyXG5cclxuICBjb25zdCBjcmVhdGVIZWFkZXIgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaGVhZGVyXCIpO1xyXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChoZWFkZXIpO1xyXG5cclxuICAgIGNvbnN0IGhlYWRlckxvZ28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIGhlYWRlckxvZ28uY2xhc3NMaXN0LmFkZChcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIik7XHJcbiAgICBoZWFkZXJMb2dvLmlubmVyVGV4dCA9IFwiZXZlbnRfYXZhaWxhYmxlXCI7XHJcbiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaGVhZGVyTG9nbyk7XHJcblxyXG4gICAgY29uc3QgbWFpblRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgbWFpblRleHQuY2xhc3NMaXN0LmFkZChcImhlYWRlclRleHRcIik7XHJcbiAgICBtYWluVGV4dC5pbm5lclRleHQgPSBcIlRvZG8gTGlzdFwiO1xyXG4gICAgaGVhZGVyLmFwcGVuZENoaWxkKG1haW5UZXh0KTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjcmVhdGVTaWRlYmFyID0gKCkgPT4ge1xyXG4gICAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBzaWRlYmFyLmNsYXNzTGlzdC5hZGQoXCJzaWRlYmFyXCIpO1xyXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChzaWRlYmFyKTtcclxuXHJcbiAgICBjb25zdCBzaWRlYmFySGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHNpZGViYXJIZWFkZXIuY2xhc3NMaXN0LmFkZChcInNpZGViYXJIZWFkZXJcIik7XHJcbiAgICBzaWRlYmFyLmFwcGVuZENoaWxkKHNpZGViYXJIZWFkZXIpO1xyXG5cclxuICAgIGNvbnN0IHNpZGViYXJMb2dvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XHJcbiAgICBzaWRlYmFyTG9nby5jbGFzc0xpc3QuYWRkKFwibWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZFwiKTtcclxuICAgIHNpZGViYXJMb2dvLmlubmVyVGV4dCA9IFwiZm9sZGVyX29wZW5cIjtcclxuICAgIHNpZGViYXJIZWFkZXIuYXBwZW5kQ2hpbGQoc2lkZWJhckxvZ28pO1xyXG5cclxuICAgIGNvbnN0IHNpZGViYXJUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBzaWRlYmFyVGl0bGUuY2xhc3NMaXN0LmFkZChcInNpZGViYXJUaXRsZVwiKTtcclxuICAgIHNpZGViYXJUaXRsZS5pbm5lclRleHQgPSBcIk15IHByb2plY3RzXCI7XHJcbiAgICBzaWRlYmFySGVhZGVyLmFwcGVuZENoaWxkKHNpZGViYXJUaXRsZSk7XHJcblxyXG4gICAgY29uc3QgbW9kaWZ5aW5nUHJvamVjdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcclxuICAgIG1vZGlmeWluZ1Byb2plY3RzLmNsYXNzTGlzdC5hZGQoXCJtb2RpZnlpbmdQcm9qZWN0c1wiKTtcclxuICAgIHNpZGViYXIuYXBwZW5kQ2hpbGQobW9kaWZ5aW5nUHJvamVjdHMpO1xyXG5cclxuICAgIGNvbnN0IGFkZFByb2plY3RJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgIGFkZFByb2plY3RJbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dFwiKTtcclxuICAgIGFkZFByb2plY3RJbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiYWRkUHJvamVjdElucHV0XCIpO1xyXG4gICAgYWRkUHJvamVjdElucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiYWRkUHJvamVjdElucHV0XCIpO1xyXG4gICAgYWRkUHJvamVjdElucHV0LnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsIFwiQWRkIG5ldyBwcm9qZWN0XCIpO1xyXG4gICAgYWRkUHJvamVjdElucHV0LnNldEF0dHJpYnV0ZShcIm1heGxlbmd0aFwiLCBcIjI1XCIpO1xyXG4gICAgYWRkUHJvamVjdElucHV0LnNldEF0dHJpYnV0ZShcImF1dG9jb21wbGV0ZVwiLCBcIm9mZlwiKTtcclxuICAgIGFkZFByb2plY3RJbnB1dC5zZXRBdHRyaWJ1dGUoXCJzcGVsbGNoZWNrXCIsIFwiZmFsc2VcIik7XHJcbiAgICBtb2RpZnlpbmdQcm9qZWN0cy5hcHBlbmRDaGlsZChhZGRQcm9qZWN0SW5wdXQpO1xyXG5cclxuICAgIGNvbnN0IGFkZFByb2plY3RMb2dvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgIGFkZFByb2plY3RMb2dvLmNsYXNzTGlzdC5hZGQoXCJtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkXCIpO1xyXG4gICAgYWRkUHJvamVjdExvZ28uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInJlc2V0XCIpO1xyXG4gICAgYWRkUHJvamVjdExvZ28uY2xhc3NMaXN0LmFkZChcImFkZFByb2plY3RcIik7XHJcbiAgICBhZGRQcm9qZWN0TG9nby5pbm5lclRleHQgPSBcImFkZFwiO1xyXG4gICAgbW9kaWZ5aW5nUHJvamVjdHMuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdExvZ28pO1xyXG5cclxuICAgIGNvbnN0IHByb2plY3RzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHByb2plY3RzLnNldEF0dHJpYnV0ZShcImlkXCIsIFwicHJvamVjdHNcIik7XHJcbiAgICBzaWRlYmFyLmFwcGVuZENoaWxkKHByb2plY3RzKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjcmVhdGVNYWluID0gKCkgPT4ge1xyXG4gICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJtYWluXCIpO1xyXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChtYWluKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjcmVhdGVDYXJkID0gKCkgPT4ge1xyXG4gICAgY29uc3QgcHJvamVjdENhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xyXG4gICAgcHJvamVjdENhcmQuY2xhc3NMaXN0LmFkZChcInByb2plY3RDYXJkXCIpO1xyXG4gICAgbWFpbi5hcHBlbmRDaGlsZChwcm9qZWN0Q2FyZCk7XHJcblxyXG4gICAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKFwicHJvamVjdFRpdGxlXCIpO1xyXG4gICAgdGFza1RpdGxlLmlubmVyVGV4dCA9IFwiU2FtcGxlIHByb2plY3RfdGl0bGVcIjtcclxuICAgIHByb2plY3RDYXJkLmFwcGVuZENoaWxkKHRhc2tUaXRsZSk7XHJcblxyXG4gICAgY29uc3QgbW9kaWZ5aW5nVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xyXG4gICAgbW9kaWZ5aW5nVGFzay5jbGFzc0xpc3QuYWRkKFwibW9kaWZ5aW5nVGFza1wiKTtcclxuICAgIHByb2plY3RDYXJkLmFwcGVuZENoaWxkKG1vZGlmeWluZ1Rhc2spO1xyXG5cclxuICAgIGNvbnN0IGFkZFRhc2tJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgIGFkZFRhc2tJbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dFwiKTtcclxuICAgIGFkZFRhc2tJbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiYWRkVGFza0lucHV0XCIpO1xyXG4gICAgYWRkVGFza0lucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiYWRkVGFza0lucHV0XCIpO1xyXG4gICAgYWRkVGFza0lucHV0LnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsIFwiQWRkIG5ldyB0YXNrXCIpO1xyXG4gICAgYWRkVGFza0lucHV0LnNldEF0dHJpYnV0ZShcImF1dG9jb21wbGV0ZVwiLCBcIm9mZlwiKTtcclxuICAgIGFkZFRhc2tJbnB1dC5zZXRBdHRyaWJ1dGUoXCJzcGVsbGNoZWNrXCIsIFwiZmFsc2VcIik7XHJcbiAgICBtb2RpZnlpbmdUYXNrLmFwcGVuZENoaWxkKGFkZFRhc2tJbnB1dCk7XHJcblxyXG4gICAgY29uc3QgYWRkVGFza0xvZ28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gICAgYWRkVGFza0xvZ28uY2xhc3NMaXN0LmFkZChcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIik7XHJcbiAgICBhZGRUYXNrTG9nby5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwicmVzZXRcIik7XHJcbiAgICBhZGRUYXNrTG9nby5jbGFzc0xpc3QuYWRkKFwiYWRkVGFza1wiKTtcclxuICAgIGFkZFRhc2tMb2dvLmlubmVyVGV4dCA9IFwiYWRkXCI7XHJcbiAgICBtb2RpZnlpbmdUYXNrLmFwcGVuZENoaWxkKGFkZFRhc2tMb2dvKTtcclxuXHJcbiAgICBjb25zdCB0YXNrcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICB0YXNrcy5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInRhc2tzXCIpO1xyXG4gICAgcHJvamVjdENhcmQuYXBwZW5kQ2hpbGQodGFza3MpO1xyXG4gIH07XHJcbiAgcmV0dXJuIHsgY3JlYXRlSGVhZGVyLCBjcmVhdGVTaWRlYmFyLCBjcmVhdGVNYWluLCBjcmVhdGVDYXJkIH07XHJcbn0pKCk7XHJcblxyXG5leHBvcnQgeyBjcmVhdGVET00gfTtcclxuIiwiaW1wb3J0IHsgY3JlYXRlRE9NIH0gZnJvbSBcIi4vY3JlYXRlRE9NXCI7XHJcbmltcG9ydCB7IHByb2plY3RzQXJyYXkgfSBmcm9tIFwiLi9sb2dpY1wiO1xyXG5pbXBvcnQgeyBsb2dpYyB9IGZyb20gXCIuL2xvZ2ljXCI7XHJcblxyXG5jb25zdCBtYW5pcHVsYXRlRE9NID0gKCgpID0+IHtcclxuICBjb25zdCByZWZyZXNoUHJvamVjdHMgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucHJvamVjdFwiKTtcclxuICAgIHByb2plY3RzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgZWxlbWVudC5yZW1vdmUoKTtcclxuICAgIH0pO1xyXG4gIH07XHJcbiAgY29uc3QgYWRkUHJvamVjdHMgPSAoKSA9PiB7XHJcbiAgICBwcm9qZWN0c0FycmF5LmZvckVhY2goKHByb2plY3RJbkFycmF5KSA9PiB7XHJcbiAgICAgIGNvbnN0IHByb2plY3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0c1wiKTtcclxuICAgICAgY29uc3QgY3JlYXRlUHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgIGNyZWF0ZVByb2plY3QuY2xhc3NMaXN0LmFkZChcInByb2plY3RcIik7XHJcbiAgICAgIGlmIChwcm9qZWN0SW5BcnJheS5uYW1lID09PSBcIlwiKSB7XHJcbiAgICAgICAgY3JlYXRlUHJvamVjdC5pbm5lclRleHQgPSBcIlVubmFtZWQgcHJvamVjdFwiO1xyXG4gICAgICB9IGVsc2UgY3JlYXRlUHJvamVjdC5pbm5lclRleHQgPSBwcm9qZWN0SW5BcnJheS5uYW1lO1xyXG4gICAgICBwcm9qZWN0cy5hcHBlbmRDaGlsZChjcmVhdGVQcm9qZWN0KTtcclxuICAgICAgLy8gU0VUIENMQVNTIFRPIEFDVElWRSBJRiBQUk9KRUNUIElTIEFDVElWRVxyXG4gICAgICBpZiAocHJvamVjdEluQXJyYXkuaXNBY3RpdmUpIHtcclxuICAgICAgICBjcmVhdGVQcm9qZWN0LmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0X2FjdGl2ZVwiKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICAvLyBESVNQTEFZIE1FU1NBR0UgSUYgTk8gUFJPSkVDVCBJUyBBQ1RJVkUgKFRIRSBTRUNPTkQgUEFSVCBJTiBUSEUgXCJJRiBTVEFURU1FTlRcIiBQUkVWRU5UUyBGUk9NIFRSWUlORyBUTyBERUxFVEUgUFJPSkVDVCBDQVJEIFdIRU4gSVQgV0FTIFJFTU9WRUQgQkVGT1JFKVxyXG4gICAgY29uc3QgYWN0aXZlUHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdF9hY3RpdmVcIik7XHJcbiAgICBjb25zdCBwcm9qZWN0Q2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdENhcmRcIik7XHJcbiAgICBpZiAoYWN0aXZlUHJvamVjdCA9PT0gbnVsbCAmJiBwcm9qZWN0Q2FyZCAhPT0gbnVsbCkge1xyXG4gICAgICBub0FjdGl2ZVByb2plY3RzKCk7XHJcbiAgICB9XHJcbiAgICBkaXNwbGF5UHJvamVjdERlbGV0ZUJ1dHRvbnMoKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBkaXNwbGF5UHJvamVjdERlbGV0ZUJ1dHRvbnMgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucHJvamVjdFwiKTtcclxuICAgIHByb2plY3RzLmZvckVhY2goKGVsZW1lbnQsIGluZGV4KSA9PiB7XHJcbiAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRlbGV0ZUljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgICAgICBkZWxldGVJY29uLmNsYXNzTGlzdC5hZGQoXCJtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkXCIpO1xyXG4gICAgICAgIGRlbGV0ZUljb24uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJkZWxldGVJY29uXCIpO1xyXG4gICAgICAgIGRlbGV0ZUljb24uaW5uZXJUZXh0ID0gXCJkZWxldGVcIjtcclxuICAgICAgICBlbGVtZW50LmFwcGVuZENoaWxkKGRlbGV0ZUljb24pO1xyXG4gICAgICAgIGxvZ2ljLnJlbW92ZVByb2plY3RGcm9tQXJyYXkoaW5kZXgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgcHJvamVjdHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsICgpID0+IHtcclxuICAgICAgICBjb25zdCBkZWxldGVJY29uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZWxldGVJY29uXCIpO1xyXG4gICAgICAgIGRlbGV0ZUljb24ucmVtb3ZlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgbm9BY3RpdmVQcm9qZWN0cyA9ICgpID0+IHtcclxuICAgIGNvbnN0IHByb2plY3RDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0Q2FyZFwiKTtcclxuICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWFpblwiKTtcclxuICAgIHByb2plY3RDYXJkLnJlbW92ZSgpO1xyXG4gICAgY29uc3Qgc2VsZWN0UHJvamVjdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBzZWxlY3RQcm9qZWN0RGl2LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwic2VsZWN0UHJvamVjdERpdlwiKTtcclxuICAgIHNlbGVjdFByb2plY3REaXYuaW5uZXJUZXh0ID1cclxuICAgICAgXCJQbGVhc2Ugc2VsZWN0IGFuIGFjdGl2ZSBwcm9qZWN0IGZyb20gdGhlIGxpc3RcIjtcclxuICAgIG1haW4uYXBwZW5kQ2hpbGQoc2VsZWN0UHJvamVjdERpdik7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgYWRkVGFza3MgPSAoYWN0aXZlUHJvamVjdCkgPT4ge1xyXG4gICAgY3JlYXRlRE9NLmNyZWF0ZUNhcmQoKTtcclxuICAgIGNvbnN0IHRhc2tJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWRkVGFza0lucHV0XCIpO1xyXG4gICAgdGFza0lucHV0LmZvY3VzKCk7IC8vIElOIE9SREVSIFRPIEZPQ1VTIE9OIElOUFVUIEVBQ0ggVElNRSBUQVNLIElTIEFEREVEL1BST0pFQ1QgSVMgQ0hBTkdFRFxyXG4gICAgY29uc3QgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0VGl0bGVcIik7XHJcbiAgICB0aXRsZUVsZW1lbnQuaW5uZXJUZXh0ID0gYWN0aXZlUHJvamVjdC5uYW1lO1xyXG4gICAgaWYgKGFjdGl2ZVByb2plY3QubmFtZSA9PT0gXCJcIikge1xyXG4gICAgICB0aXRsZUVsZW1lbnQuaW5uZXJUZXh0ID0gXCJVbm5hbWVkIHByb2plY3RcIjtcclxuICAgIH1cclxuICAgIGNvbnN0IGFjdGl2ZVByb2plY3RUYWtzID0gYWN0aXZlUHJvamVjdC50YXNrcztcclxuICAgIGNvbnN0IHRhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YXNrc1wiKTtcclxuICAgIGFjdGl2ZVByb2plY3RUYWtzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgY29uc3QgY3JlYXRlVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgIGNyZWF0ZVRhc2suY2xhc3NMaXN0LmFkZChcInRhc2tcIik7XHJcbiAgICAgIGlmIChlbGVtZW50ID09PSBcIlwiKSB7XHJcbiAgICAgICAgY3JlYXRlVGFzay5pbm5lclRleHQgPSBcIlVubmFtZWQgdGFza1wiO1xyXG4gICAgICB9IGVsc2UgY3JlYXRlVGFzay5pbm5lclRleHQgPSBlbGVtZW50O1xyXG4gICAgICB0YXNrcy5hcHBlbmRDaGlsZChjcmVhdGVUYXNrKTtcclxuICAgIH0pO1xyXG4gICAgZGlzcGxheVRhc2tzRGVsZXRlQnV0dG9ucygpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHJlZnJlc2hUYXNrcyA9ICgpID0+IHtcclxuICAgIGNvbnN0IHNlbGVjdFByb2plY3REaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlbGVjdFByb2plY3REaXZcIik7XHJcbiAgICAvLyBSRU1PVkUgVEhFIE1FU1NBR0UgVEhBVCBOTyBQUk9KRUNUIElTIEFDVElWRSBJRiBJVCBFWElTVFNcclxuICAgIGlmIChzZWxlY3RQcm9qZWN0RGl2ICE9PSBudWxsKSB7XHJcbiAgICAgIHNlbGVjdFByb2plY3REaXYucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBwcm9qZWN0Q2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdENhcmRcIik7XHJcbiAgICAvLyBSRU1PVkUgUFJPSkVDVCBDQVJEIElGIElUIEVYSVNUUyAtIElUIFdJTEwgQkUgQURERUQgSU4gXCJBRERUQVNLU1wiIEZVTkNUSU9OXHJcbiAgICBpZiAocHJvamVjdENhcmQgIT09IG51bGwpIHtcclxuICAgICAgcHJvamVjdENhcmQucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgZGlzcGxheVRhc2tzRGVsZXRlQnV0dG9ucyA9ICgpID0+IHtcclxuICAgIGNvbnN0IHRhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50YXNrXCIpO1xyXG4gICAgdGFza3MuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcclxuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLCAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGVsZXRlSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gICAgICAgIGRlbGV0ZUljb24uY2xhc3NMaXN0LmFkZChcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIik7XHJcbiAgICAgICAgZGVsZXRlSWNvbi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImRlbGV0ZUljb25cIik7XHJcbiAgICAgICAgZGVsZXRlSWNvbi5pbm5lclRleHQgPSBcImRlbGV0ZVwiO1xyXG4gICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoZGVsZXRlSWNvbik7XHJcbiAgICAgICAgbG9naWMucmVtb3ZlVGFza0Zyb21BcnJheShpbmRleCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICB0YXNrcy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XHJcbiAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIiwgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRlbGV0ZUljb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlbGV0ZUljb25cIik7XHJcbiAgICAgICAgZGVsZXRlSWNvbi5yZW1vdmUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgcmVmcmVzaFByb2plY3RzLFxyXG4gICAgYWRkUHJvamVjdHMsXHJcbiAgICBhZGRUYXNrcyxcclxuICAgIHJlZnJlc2hUYXNrcyxcclxuICAgIG5vQWN0aXZlUHJvamVjdHMsXHJcbiAgfTtcclxufSkoKTtcclxuXHJcbmV4cG9ydCB7IG1hbmlwdWxhdGVET00gfTtcclxuIiwiaW1wb3J0IHsgbWFuaXB1bGF0ZURPTSB9IGZyb20gXCIuL21hbmlwdWxhdGVET01cIjtcclxuXHJcbmNvbnN0IHByb2plY3RzQXJyYXkgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogXCJDbGVhbiB0aGUgaG91c2VcIixcclxuICAgIGlzQWN0aXZlOiB0cnVlLFxyXG4gICAgdGFza3M6IFtcclxuICAgICAgXCJNYWtlIGEgYmVkXCIsXHJcbiAgICAgIFwiV2FzaCB0aGUgZGlzaGVzXCIsXHJcbiAgICAgIFwiVmFjdXVtIHRoZSByb29tXCIsXHJcbiAgICAgIFwiQ2xlYW4gdGhlIHdpbmRvd3NcIixcclxuICAgIF0sXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlN0dWR5IGZvciBzY2hvb2xcIixcclxuICAgIGlzQWN0aXZlOiBmYWxzZSxcclxuICAgIHRhc2tzOiBbXHJcbiAgICAgIFwiU3R1ZHkgZm9yIHBoeXNpY3MgcXVpelwiLFxyXG4gICAgICBcIlN0dWR5IGZvciBiaW9sb2d5IHF1aXpcIixcclxuICAgICAgXCJEbyB0aGUgaG9tZXdvcmtcIixcclxuICAgICAgXCJDaGlsbCBhZnRlcndhcmRzXCIsXHJcbiAgICBdLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJCdXkgZ3JvY2VyaWVzXCIsXHJcbiAgICBpc0FjdGl2ZTogZmFsc2UsXHJcbiAgICB0YXNrczogW1xyXG4gICAgICBcIjIgY2Fycm90c1wiLFxyXG4gICAgICBcIjMgdG9tYXRvZXNcIixcclxuICAgICAgXCIxIGJhbmFuYVwiLFxyXG4gICAgICBcIjQgYXZvY2Fkb1wiLFxyXG4gICAgICBcIjEga2l3aVwiLFxyXG4gICAgICBcIjIgYXBwbGVzXCIsXHJcbiAgICBdLFxyXG4gIH0sXHJcbl07XHJcblxyXG5jbGFzcyBwcm9qZWN0Q2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKG5hbWUsIGlzQWN0aXZlLCB0YXNrcykge1xyXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgIHRoaXMuaXNBY3RpdmUgPSBpc0FjdGl2ZTtcclxuICAgIHRoaXMudGFza3MgPSB0YXNrcztcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IGxvZ2ljID0gKCgpID0+IHtcclxuICAvLyBGSU5EIEFDVElWRSBQUk9KRUNUIE9OIExBVU5DSFxyXG4gIGNvbnN0IGZpbmRBY3RpdmVQcm9qZWN0ID0gKCkgPT4ge1xyXG4gICAgY29uc3QgYWN0aXZlUHJvamVjdCA9IHByb2plY3RzQXJyYXkuZmluZChcclxuICAgICAgKGVsZW1lbnQpID0+IGVsZW1lbnQuaXNBY3RpdmUgPT09IHRydWVcclxuICAgICk7XHJcbiAgICBhZGRUYXNrVG9BcnJheShhY3RpdmVQcm9qZWN0KTsgLy8gUE9QVUxBVEUgVEFTS1MgT0YgQUNUSVZFIFBST0pFQ1QgT04gU1RBUlRcclxuICB9O1xyXG5cclxuICBjb25zdCBhZGRQcm9qZWN0VG9BcnJheSA9ICgpID0+IHtcclxuICAgIC8vIEJFSEFWSU9VUiBGT1IgUFJFU1NJTkcgUExVUyBJQ09OXHJcbiAgICBjb25zdCBwcm9qZWN0SW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZFByb2plY3RJbnB1dFwiKTtcclxuICAgIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkUHJvamVjdFwiKTtcclxuICAgIGFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICBsZXQgbmV3UHJvamVjdCA9IG5ldyBwcm9qZWN0Q2xhc3MocHJvamVjdElucHV0LnZhbHVlLCBmYWxzZSwgW10pO1xyXG4gICAgICBwcm9qZWN0c0FycmF5LnB1c2gobmV3UHJvamVjdCk7XHJcbiAgICAgIG1hbmlwdWxhdGVET00ucmVmcmVzaFByb2plY3RzKCk7XHJcbiAgICAgIG1hbmlwdWxhdGVET00uYWRkUHJvamVjdHMoKTtcclxuICAgICAgYWN0aXZhdGVQcm9qZWN0U2VsZWN0aW9uKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBCRUhBVklPVVIgRk9SIFBSRVNTSU5HIEVOVEVSXHJcbiAgICBwcm9qZWN0SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXByZXNzXCIsIChlKSA9PiB7XHJcbiAgICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGxldCBuZXdQcm9qZWN0ID0gbmV3IHByb2plY3RDbGFzcyhwcm9qZWN0SW5wdXQudmFsdWUsIGZhbHNlLCBbXSk7XHJcbiAgICAgICAgcHJvamVjdHNBcnJheS5wdXNoKG5ld1Byb2plY3QpO1xyXG4gICAgICAgIG1hbmlwdWxhdGVET00ucmVmcmVzaFByb2plY3RzKCk7XHJcbiAgICAgICAgbWFuaXB1bGF0ZURPTS5hZGRQcm9qZWN0cygpO1xyXG4gICAgICAgIHByb2plY3RJbnB1dC52YWx1ZSA9IG51bGw7XHJcbiAgICAgICAgYWN0aXZhdGVQcm9qZWN0U2VsZWN0aW9uKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHJlbW92ZVByb2plY3RGcm9tQXJyYXkgPSAoaW5kZXgpID0+IHtcclxuICAgIGNvbnN0IGRlbGV0ZUljb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlbGV0ZUljb25cIik7XHJcbiAgICBkZWxldGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOyAvLyBTVE9QUyBQUk9KRUNUIEZST00gQkVJTkcgU0VUIEFTIEFDVElWRSBBRlRFUiBCRUlORyBERUxFVEVEXHJcbiAgICAgIHByb2plY3RzQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgbWFuaXB1bGF0ZURPTS5yZWZyZXNoUHJvamVjdHMoKTtcclxuICAgICAgbWFuaXB1bGF0ZURPTS5hZGRQcm9qZWN0cygpO1xyXG4gICAgICBhY3RpdmF0ZVByb2plY3RTZWxlY3Rpb24oKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGFjdGl2YXRlUHJvamVjdFNlbGVjdGlvbiA9ICgpID0+IHtcclxuICAgIGNvbnN0IHByb2plY3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wcm9qZWN0XCIpO1xyXG4gICAgcHJvamVjdHMuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcclxuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIC8vIERFQUNUSVZBVEUgQUxMIFBST0pFQ1RTXHJcbiAgICAgICAgcHJvamVjdHNBcnJheS5mb3JFYWNoKChwcm9qZWN0SW5BcnJheSkgPT4ge1xyXG4gICAgICAgICAgcHJvamVjdEluQXJyYXkuaXNBY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBwcm9qZWN0c0FycmF5W2luZGV4XS5pc0FjdGl2ZSA9IHRydWU7IC8vIEFDVElWQVRFIE9OTFkgQ0xJQ0tFRCBQUk9KRUNUXHJcbiAgICAgICAgbWFuaXB1bGF0ZURPTS5yZWZyZXNoUHJvamVjdHMoKTtcclxuICAgICAgICBtYW5pcHVsYXRlRE9NLmFkZFByb2plY3RzKCk7XHJcbiAgICAgICAgYWRkVGFza1RvQXJyYXkocHJvamVjdHNBcnJheVtpbmRleF0pOyAvLyBQT1BVTEFURSBUQVNLUyBPRiBBQ1RJVkUgUFJPSkVDVCBFVkVSWSBUSU1FIE5FVyBQUk9KRUNUIElTIFNFTEVDVEVEXHJcbiAgICAgICAgYWN0aXZhdGVQcm9qZWN0U2VsZWN0aW9uKCk7IC8vIElOIE9SREVSIFRPIFJVTiBGVU5DVElPTiBNT1JFIFRIQU4gT05DRSBCRUZPUkUgQURESU5HIE5FVyBQUk9KRUNUXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgYWRkVGFza1RvQXJyYXkgPSAoYWN0aXZlUHJvamVjdCkgPT4ge1xyXG4gICAgY29uc3QgdGFza3NBcnJheSA9IGFjdGl2ZVByb2plY3QudGFza3M7XHJcbiAgICBtYW5pcHVsYXRlRE9NLnJlZnJlc2hUYXNrcygpO1xyXG4gICAgbWFuaXB1bGF0ZURPTS5hZGRUYXNrcyhhY3RpdmVQcm9qZWN0KTtcclxuXHJcbiAgICAvLyBCRUhBVklPVVIgRk9SIFBSRVNTSU5HIFBMVVMgSUNPTlxyXG4gICAgY29uc3QgdGFza0lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGRUYXNrSW5wdXRcIik7XHJcbiAgICBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZFRhc2tcIik7XHJcbiAgICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgbGV0IG5ld1Rhc2sgPSB0YXNrSW5wdXQudmFsdWU7XHJcbiAgICAgIHRhc2tzQXJyYXkucHVzaChuZXdUYXNrKTtcclxuICAgICAgbWFuaXB1bGF0ZURPTS5yZWZyZXNoVGFza3MoKTtcclxuICAgICAgbWFuaXB1bGF0ZURPTS5hZGRUYXNrcyhhY3RpdmVQcm9qZWN0KTtcclxuICAgICAgYWRkVGFza1RvQXJyYXkoYWN0aXZlUHJvamVjdCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBCRUhBVklPVVIgRk9SIFBSRVNTSU5HIEVOVEVSXHJcbiAgICB0YXNrSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXByZXNzXCIsIChlKSA9PiB7XHJcbiAgICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGxldCBuZXdUYXNrID0gdGFza0lucHV0LnZhbHVlO1xyXG4gICAgICAgIHRhc2tzQXJyYXkucHVzaChuZXdUYXNrKTtcclxuICAgICAgICBtYW5pcHVsYXRlRE9NLnJlZnJlc2hUYXNrcygpO1xyXG4gICAgICAgIG1hbmlwdWxhdGVET00uYWRkVGFza3MoYWN0aXZlUHJvamVjdCk7XHJcbiAgICAgICAgYWRkVGFza1RvQXJyYXkoYWN0aXZlUHJvamVjdCk7XHJcbiAgICAgICAgdGFza0lucHV0LnZhbHVlID0gbnVsbDtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgcmVtb3ZlVGFza0Zyb21BcnJheSA9IChpbmRleCkgPT4ge1xyXG4gICAgLy8gRklORCBBQ1RJVkUgUFJPSkVDVFxyXG4gICAgY29uc3QgYWN0aXZlUHJvamVjdCA9IHByb2plY3RzQXJyYXkuZmluZChcclxuICAgICAgKGVsZW1lbnQpID0+IGVsZW1lbnQuaXNBY3RpdmUgPT09IHRydWVcclxuICAgICk7XHJcbiAgICBjb25zdCB0YXNrc0FycmF5ID0gYWN0aXZlUHJvamVjdC50YXNrcztcclxuICAgIGNvbnN0IGRlbGV0ZUljb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlbGV0ZUljb25cIik7XHJcbiAgICBkZWxldGVJY29uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICB0YXNrc0FycmF5LnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgIG1hbmlwdWxhdGVET00ucmVmcmVzaFRhc2tzKCk7XHJcbiAgICAgIG1hbmlwdWxhdGVET00uYWRkVGFza3MoYWN0aXZlUHJvamVjdCk7XHJcbiAgICAgIGFkZFRhc2tUb0FycmF5KGFjdGl2ZVByb2plY3QpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuICByZXR1cm4ge1xyXG4gICAgYWRkUHJvamVjdFRvQXJyYXksXHJcbiAgICByZW1vdmVQcm9qZWN0RnJvbUFycmF5LFxyXG4gICAgYWN0aXZhdGVQcm9qZWN0U2VsZWN0aW9uLFxyXG4gICAgYWRkVGFza1RvQXJyYXksXHJcbiAgICByZW1vdmVUYXNrRnJvbUFycmF5LFxyXG4gICAgZmluZEFjdGl2ZVByb2plY3QsXHJcbiAgfTtcclxufSkoKTtcclxuXHJcbmV4cG9ydCB7IGxvZ2ljIH07XHJcbmV4cG9ydCB7IHByb2plY3RzQXJyYXkgfTtcclxuIiwiaW1wb3J0IFwiLi9zdHlsZXMuY3NzXCI7XHJcbmltcG9ydCB7IGNyZWF0ZURPTSB9IGZyb20gXCIuL2NyZWF0ZURPTVwiO1xyXG5pbXBvcnQgeyBsb2dpYyB9IGZyb20gXCIuL2xvZ2ljXCI7XHJcbmltcG9ydCB7IG1hbmlwdWxhdGVET00gfSBmcm9tIFwiLi9tYW5pcHVsYXRlRE9NXCI7XHJcblxyXG5jcmVhdGVET00uY3JlYXRlSGVhZGVyKCk7XHJcbmNyZWF0ZURPTS5jcmVhdGVTaWRlYmFyKCk7XHJcbmNyZWF0ZURPTS5jcmVhdGVNYWluKCk7XHJcbmNyZWF0ZURPTS5jcmVhdGVDYXJkKCk7XHJcbmxvZ2ljLmFkZFByb2plY3RUb0FycmF5KCk7XHJcbmxvZ2ljLmZpbmRBY3RpdmVQcm9qZWN0KCk7XHJcbm1hbmlwdWxhdGVET00uYWRkUHJvamVjdHMoKTtcclxubG9naWMuYWN0aXZhdGVQcm9qZWN0U2VsZWN0aW9uKCk7XHJcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJjcmVhdGVET00iLCJnZXRFbGVtZW50QnlJZCIsImNyZWF0ZUhlYWRlciIsImhlYWRlciIsImhlYWRlckxvZ28iLCJjbGFzc0xpc3QiLCJhZGQiLCJpbm5lclRleHQiLCJtYWluVGV4dCIsImNyZWF0ZVNpZGViYXIiLCJzaWRlYmFyIiwic2lkZWJhckhlYWRlciIsInNpZGViYXJMb2dvIiwic2lkZWJhclRpdGxlIiwibW9kaWZ5aW5nUHJvamVjdHMiLCJhZGRQcm9qZWN0SW5wdXQiLCJhZGRQcm9qZWN0TG9nbyIsInByb2plY3RzIiwiY3JlYXRlTWFpbiIsIm1haW4iLCJjcmVhdGVDYXJkIiwicHJvamVjdENhcmQiLCJ0YXNrVGl0bGUiLCJtb2RpZnlpbmdUYXNrIiwiYWRkVGFza0lucHV0IiwiYWRkVGFza0xvZ28iLCJ0YXNrcyIsIm1hbmlwdWxhdGVET00iLCJub0FjdGl2ZVByb2plY3RzIiwic2VsZWN0UHJvamVjdERpdiIsInJlZnJlc2hQcm9qZWN0cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiYWRkUHJvamVjdHMiLCJwcm9qZWN0c0FycmF5IiwicHJvamVjdEluQXJyYXkiLCJjcmVhdGVQcm9qZWN0IiwibmFtZSIsImlzQWN0aXZlIiwiYWN0aXZlUHJvamVjdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkZWxldGVJY29uIiwibG9naWMiLCJyZW1vdmVQcm9qZWN0RnJvbUFycmF5IiwiZGlzcGxheVByb2plY3REZWxldGVCdXR0b25zIiwiYWRkVGFza3MiLCJmb2N1cyIsInRpdGxlRWxlbWVudCIsImFjdGl2ZVByb2plY3RUYWtzIiwiY3JlYXRlVGFzayIsInJlbW92ZVRhc2tGcm9tQXJyYXkiLCJkaXNwbGF5VGFza3NEZWxldGVCdXR0b25zIiwicmVmcmVzaFRhc2tzIiwicHJvamVjdENsYXNzIiwiY29uc3RydWN0b3IiLCJhY3RpdmF0ZVByb2plY3RTZWxlY3Rpb24iLCJhZGRUYXNrVG9BcnJheSIsInRhc2tzQXJyYXkiLCJ0YXNrSW5wdXQiLCJuZXdUYXNrIiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsImFkZFByb2plY3RUb0FycmF5IiwicHJvamVjdElucHV0IiwibmV3UHJvamVjdCIsInN0b3BQcm9wYWdhdGlvbiIsImZpbmQiLCJmaW5kQWN0aXZlUHJvamVjdCJdLCJzb3VyY2VSb290IjoiIn0=